% Операторы

% Арифметические 

% Как задать матрицу 
a=[] %пустая матрица

%1 2 
%3 4
a=[1.2 2 ; 3 4]
a=[1 2;...
   3 4]
a=[8 8 8 8 8 8 8 8 ;...
   8 7 7 7 7 7 7 7  ;...
   8 7 6 6 6 6 6 6  ;...
   8 7 6 5 5 5 5 5  ;...
   8 7 6 5 4 4 4 4  ;...
   8 7 6 5 4 3 3 3  ;...
   8 7 6 5 4 3 2 2  ;...
   8 7 6 5 4 3 2 1  ;]

clc
clear all
a= [1 2;...
    3 4]
% Арифметические
% МATLAB производит вычисления по матричным правилам
% 1) + и -
b1=a+a
b2=a-a
% 2) * и / и \
%B/A=B*A^(-1)
b3=a*a
b4=a/a
%B\A=B^(-1)*A деление слева
b5=a\a

% Степень

b6=a^5
% Транспонирование
%!!!!! ЕЩЕ И СОПРЯЖЕНИЕ
% '
b7=a'

aComp=[1+i 2-i; 3+i 4-i]
b8=aComp'

% Простое транспонирование
% .'
b9=aComp.'

%поэлементные арифметические опреаторы
% .+ === +
% .- === -
% .*
% ./
% .\
% .^
clc
a^2
a.^2

%Умножение матрицы на число
b10=3*a

% Реляционные операторы (операторы отношения)
% <
% <=
% >
% >=
% ==
% ~= (не равно)

%В результате применения реляц оператора, получается логическая матрица, 
%соотв размерности

b11=2>3
b12=2==5
b13=2~=7

%как проверить на ПУСТОТУ
a=[]
isempty(a) % пусто ли (а) ? да-1, нет-0
clc

a=[1 2 3 4]
b14=a>2
b=[1 5 2 6]
b15=a>b

%Логические операторы
%Поэлементные
%Побитовые
%Короткие
a=[0 1 1 0 1]
b=[1 1 0 0 1]
%логическое И
b15=a&b
%логическое или
b16=a|b
%логическое НЕ
b17=~a

%исключающее ИЛИ
%xor()
xor(a,b)
%Логические операторы модно применять
%не тлько для векторов 0 1
a=[2 3]
b=[0 7]
%после применения лог операций будет:
%a=[1 1]
%b=[0 1]
a&b
a|b
xor(a,b)

%Побитовые
dec2bin()
bin2dec()

% bitand()
% bitor()
% bitcmp()
% bitxor()

%Короткие 
%&&
%||

%ели значение логического выражения известно без вычисления
%всех элементов, то они и не вычисляются
2>5&&7<8 %при && матлаб когда увидит первый 0, дальше вычислять не будет!!!
 0    1












